@model IEnumerable<FinanceApp.Models.Expense>

<h2>My Expenses</h2>

<div class="container">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount.ToString("C")</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToShortDateString()</td>
                    <td>
                        <a asp-action="EditExpense" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-2">Edit</a>
                        <form asp-action="DeleteExpense" asp-controller="Expenses" method="post" style="display:inline;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this expense?');">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<h2>Expenses Overview</h2>
<div>
    <canvas style="max-width:450px; max-height:450px" id="myChart"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart').then(response => response.json()).then(data => {
        new Chart(ctx, {
          type: 'pie',
          data: {
            labels: data.map(d => d.category),
            datasets: [{
                data: data.map(d => d.total),
            }]
          }
        });
    })
    
</script>